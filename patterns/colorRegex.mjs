const hexRegex = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;
const hslCommas =
  /^(hsl)a?\((?<hue>(-|\+)?((0|[1-9]([0-9]+)?)|(?:(0|[1-9]+)?\.\d+)?)((deg)|(g?rad)|(turn))?), ?(?<saturation>(\b([0-9]|[1-9][0-9]|100)\b)(?:\.\d+)?%, ?)(?<light>(\b([0-9]|[1-9][0-9]|100)\b)(?:\.\d+)?%,? ?)(?<alpha>((\b([0-9]|[1-9][0-9]|100)\b)(?:\.\d+)?%)|(0?(?:\.\d+))|1)?\)$/i;
const hslSpaces =
  /^(hsl)a?\((?<hue>(-|\+)?((0|[1-9]([0-9]+)?)|(?:(0|[1-9]([0-9]+)?)?\.\d+)?)((deg)|(g?rad)|(turn))?) (?<saturation>\b((100)|[1-9][0-9]|[0-9])\b(\.\d+)?%) (?<lightness>\b((100)|[1-9][0-9]|[0-9])\b(\.\d+)?%)( \/ (?<alpha>((\b(0|[1-9]([0-9])?|100)\b)(?:\.\d+)?%)|(0?(?:\.\d+))|1))?\)$/i;
const rgbCommas =
  /^rgba?\((((?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)|((?:100|\d{1,2})%))((, )|,)){2}(((?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)|((?:100|\d{1,2})%)))((, ?)(((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;
const rgbSpaces =
  /^rgba?\((((?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)|((?:100|\d{1,2})%)) ){2}(((?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)|((?:100|\d{1,2})%)))( \/ (((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;
const labRegex =
  /^lab\((0?(?:100|\d{0,2}(?:\.\d*)?)%?)( -?((0?(?:100|\d{0,2}(?:\.\d*)?)%?)|((0?[0-9]?[0-9]|1[01][0-9]|12[0-5])))){2}( \/ (((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;
const oklabRegex =
  /^oklab\((0?(?:100|\d{0,2}(?:\.\d*)?)%?)( -?((0?(?:100|\d{0,2}(?:\.\d*)?)%?)|((0?[0-9]?[0-9]|1[01][0-9]|12[0-5])))){2}( \/ (((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;
const lchRegex =
  /^lch\((0?(?:100|\d{0,2}(?:\.\d*)?)%?)( -?((0?(?:100|\d{0,2}(?:\.\d*)?)%?)|((0?[0-9]?[0-9]|1[01][0-9]|12[0-5])))){2}( \/ (((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;
const oklchRegex =
  /^oklch\((0?(?:100|\d{0,2}(?:\.\d*)?)%?)( -?((0?(?:100|\d{0,2}(?:\.\d*)?)%?)|((0?[0-9]?[0-9]|1[01][0-9]|12[0-5])))){2}( \/ (((?:100|\d{1,2})%)|(0?\.\d+%?)))?\)/;

export default {
  hexRegex,
  hslCommas,
  hslSpaces,
  rgbCommas,
  rgbSpaces,
  labRegex,
  oklabRegex,
  lchRegex,
  oklchRegex,
};
